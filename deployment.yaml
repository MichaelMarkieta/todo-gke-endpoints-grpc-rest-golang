apiVersion: v1
kind: Service
metadata:
  name: grpc-todo
spec:
  ports:
  - port: 80
    targetPort: 9000
    protocol: TCP
    name: http2
  selector:
    app: grpc-todo
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: http-todo
spec:
  ports:
  - port: 80
    targetPort: 9001
    protocol: TCP
    name: http
  selector:
    app: grpc-todo
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: http-swagger-ui
spec:
  ports:
  - port: 81
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: grpc-todo
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-todo
spec:
  rules:
  - http:
      paths:
      - path: /swagger/*
        backend:
          serviceName: http-swagger-ui
          servicePort: 81
  backend:
    serviceName: http-todo
    servicePort: 80
---
apiVersion: v1
data:
  nginx-cors.conf: |
        # Note: The following lines are included in a server block, so we cannot use all Nginx constructs here.
        set $cors_expose_headers "";
        set $cors_max_age "";

        if ($request_method = 'OPTIONS') {
            set $cors_max_age 1728000;
            return 204;
        }

        if ($request_method = 'POST') {
            set $cors_expose_headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        }

        if ($request_method = 'GET') {
            set $cors_expose_headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        }

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Expose-Headers' $cors_expose_headers;
        add_header 'Access-Control-Max-Age' $cors_max_age;

        location /openapi {
            alias /var/www/openapi;
        }

kind: ConfigMap
metadata:
  name: nginx-cors-conf
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grpc-todo
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grpc-todo
    spec:
      volumes:
        - name: nginx-conf-d
          configMap:
            name: nginx-cors-conf 
        - name: openapi-spec
          configMap:
            name: todo-openapi-specification
      containers:
      - name: esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http2_port=9000",                 # gRPC
          "--http_port=9001",                  # HTTP
          "--service=SERVICE_NAME",
          "--version=SERVICE_CONFIG_ID",
          "--backend=grpc://127.0.0.1:50051"
        ]
        ports:
          - containerPort: 9000
          - containerPort: 9001
        livenessProbe:				# Used by deployment controller
          httpGet:
            path: /v1/health
            port: 9001				# Pass request thru ESP
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:				# Used by Ingress/GCLB
          httpGet:
            path: /v1/health
            port: 9001				# Pass request thru ESP
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
          - name: nginx-conf-d
            mountPath: /var/lib/nginx/extra/
          - name: openapi-spec
            mountPath: /var/www/openapi
      - name: todo
        image: gcr.io/PROJECT_ID/todo:BUILD_ID
        ports:
          - containerPort: 50051
      - name: swagger-ui
        image: swaggerapi/swagger-ui
        ports:
          - containerPort: 8080
        env:
          - name: API_URL
            value: /openapi/openapi.json
          - name: BASE_URL
            value: /swagger/
